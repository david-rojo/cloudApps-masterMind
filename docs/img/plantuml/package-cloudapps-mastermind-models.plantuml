@startuml Package **cloudapps.mastermind.models**

package "cloudapps.mastermind.models" {

  abstract class Combination {
    -{static}{final} int WIDTH
    #List<Color> colors
    #Combination()
    +{static}getWidth(): int 
  }

  class Game {
    -{static}{final} int MAX_LONG
    -int attempts
    -List<ProposedCombination> proposedCombinations
    -List<Result> results
    -SecretCombination secretCombination
    +Game()
    +addProposedCombination(ProposedCombination): void
    +getAttempts(): int
    +getProposedCombination(int): ProposedCombination
    +getResult(int): Result
    +isFinished(): boolean
    +isLooser(): void
    +isWinner(): void
    +reset(): void    
  }  

  class ProposedCombination extends Combination {
    +ProposedCombination()
    +ProposedCombination(String)
    ~contains(Color): boolean
    ~contains(Color, int): boolean
    +getColors(): List<Color>
  }

  class Result {
    -int blacks
    -int whites
    ~Result(int, int)
    ~isWinner(): boolean
    +getBlacks(): int
    +getWhites(): int
  }
  
  class SecretCombination extends Combination {
    ~SecretCombination()
    ~getResult(ProposedCombination): Result
  }

  class State {
    -StateValue stateValue
    +State()
    +getValueState(): StateValue
    +next(): void
    +reset(): void
  }
  
  enum StateValue {
    INITIAL,
    IN_GAME,
    RESUME,
    EXIT
  }  
  
  Combination *--> cloudapps.mastermind.types.Color
  Combination ..> java.util.ArrayList
  Combination ..> java.util.List

  Game *--> SecretCombination
  Game *--> ProposedCombination
  Game *--> Result
  Game ..> java.util.ArrayList
  Game ..> java.util.List

  ProposedCombination ..> cloudapps.mastermind.types.Color
  ProposedCombination ..> java.util.List

  Result ..> Combination

  SecretCombination ..> cloudapps.mastermind.types.Color
  SecretCombination ..> java.util.Collections
  SecretCombination ..> java.util.Random

  State *--> StateValue

}

@enduml
