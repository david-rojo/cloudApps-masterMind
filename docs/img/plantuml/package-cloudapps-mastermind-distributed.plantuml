@startuml Package **cloudapps.mastermind.distributed**

package "cloudapps.mastermind.distributed" {

  class LogicImplementationServer extends cloudapps.mastermind.controllers.implementation.LogicImplementation {
    +createDispatchers(DispatcherPrototype): void
  }

  class LogicProxy extends cloudapps.mastermind.controllers.Logic {
    -TCPIP tpip
    +LogicProxy()
    +close(): void
  }

  class MasterMindClient extends cloudapps.mastermind.MasterMind {
    -LogicProxy logicProxy
    +{static}main(String[]): void
    #createLogic(): Logic
    #play(): void
  }

  class MasterMindServer {
    -DispatcherPrototype dispatcherPrototype
    -LogicImplementationServer logic
    +{static}main(String[]): void
    -MasterMindServer()
    -serve(): void
  }
  
  class PlayControllerProxy extends cloudapps.mastermind.controllers.PlayController {
    -TCPIP tcpip
    +PlayControllerProxy(Session, TCPIP)
    +addProposedCombination(List<Color>): void
    +continueState(): void
    +getAttempts(): void
    +getBlacks(int): int
    +getColors(int): List<Color>
    +getCombinationWidth(): int
    +getProposedCombinationError(List<Color>): Error
    +getWhites(int): int
    +isFinished(): boolean
    +isLooser(): boolean
    +isWinner(): boolean
    +redo(): void
    +redoable(): boolean
    +undo(): void
    +undoable(): boolean
  }
  
  class ResumeControllerProxy extends cloudapps.mastermind.controllers.ResumeController {
    -TCPIP tcpip
    +ResumeControllerProxy(Session, TCPIP)
    +getCombinationWidth(): int
    +resume(boolean): void
  }

  class SessionProxy implements cloudapps.mastermind.models.Session {
    -TCPIP tcpip
    +SessionProxy(TCPIP)
    +getValueState(): StateValue
  }

  class StartControllerProxy extends StartController {
    -TCPIP tcpip
    +StartControllerProxy(Session, TCPIP)
    +getCombinationWidth(): int
    +start(): void
  }

  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.AddProposedCombinationDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.AttemptsDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.BlacksDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.ColorsOfPositionDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.CombinationWidthDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.ContinueStateDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.DispatcherPrototype
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.FinishedDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.FrameType
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.LooserDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.ResumeDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.StartDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.StateDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.WhitesDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.WinnerDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.errors.ErrorsProposedCombinationDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.undoredo.RedoDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.undoredo.RedoableDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.undoredo.UndoDispatcher
  LogicImplementationServer ..> cloudapps.mastermind.distributed.dispatchers.undoredo.UndoableDispatcher

  LogicProxy *--> cloudapps.mastermind.distributed.dispatchers.TCPIP
  LogicProxy ..> cloudapps.mastermind.models.StateValue

  MasterMindClient *--> LogicProxy
  MasterMindClient ..> cloudapps.mastermind.controllers.Logic

  MasterMindServer *--> LogicImplementationServer
  MasterMindServer *--> cloudapps.mastermind.distributed.dispatchers.DispatcherPrototype

  PlayControllerProxy *--> cloudapps.mastermind.distributed.dispatchers.TCPIP
  PlayControllerProxy ..> cloudapps.mastermind.distributed.dispatchers.FrameType
  PlayControllerProxy ..> cloudapps.mastermind.models.Session
  PlayControllerProxy ..> cloudapps.mastermind.types.Color
  PlayControllerProxy ..> cloudapps.mastermind.types.Error
  PlayControllerProxy ..> java.util.ArrayList
  PlayControllerProxy ..> java.util.List

  ResumeControllerProxy *--> cloudapps.mastermind.distributed.dispatchers.TCPIP
  ResumeControllerProxy ..> cloudapps.mastermind.models.Session
  ResumeControllerProxy ..> cloudapps.mastermind.distributed.dispatchers.FrameType

  SessionProxy *--> cloudapps.mastermind.distributed.dispatchers.TCPIP
  SessionProxy ..> cloudapps.mastermind.models.StateValue
  SessionProxy ..> cloudapps.mastermind.distributed.dispatchers.FrameType

  StartControllerProxy *--> cloudapps.mastermind.distributed.dispatchers.TCPIP
  StartControllerProxy ..> cloudapps.mastermind.models.Session
  StartControllerProxy ..> cloudapps.mastermind.distributed.dispatchers.FrameType
  
}

@enduml
